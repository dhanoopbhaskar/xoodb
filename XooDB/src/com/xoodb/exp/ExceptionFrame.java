/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ExceptionFrame.java
 *
 * Created on Mar 19, 2011, 8:41:16 PM
 */

package com.xoodb.exp;

import com.xoodb.constants.XooDBConstants;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author dhanoopbhaskar
 */
public class ExceptionFrame extends javax.swing.JFrame {
    OutputStream outputStream = null;
    PrintStream printStream = null;
    

    /** Creates new form ExceptionFrame */
    public ExceptionFrame() {
        try {
            String osName = System.getProperty("os.name");
            if(osName.contains("Windows")) {
                UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            } else if(osName.contains("Linux")) {
                UIManager.setLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }
        SwingUtilities.updateComponentTreeUI(this);
        initComponents();
        setTitle("XooDB Output Screen");
        setLocationRelativeTo(this);
        setVisible(false);


        outputStream = new TextAreaOutputStream(this);
        printStream = new PrintStream(outputStream);

//        if(XooDBConstants.LOG) {
//            new Thread(new CaptureSystemOut(this)).start();
//        }

        if(XooDBConstants.LOG) {
            changeSystemOut(printStream);
        } else {
            changeSystemOut(System.out);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        exceptionTextArea = new javax.swing.JTextArea();
        writeToFileButton = new javax.swing.JButton();

        exceptionTextArea.setColumns(20);
        exceptionTextArea.setEditable(false);
        exceptionTextArea.setLineWrap(true);
        exceptionTextArea.setRows(5);
        jScrollPane1.setViewportView(exceptionTextArea);

        writeToFileButton.setText("Write To File");
        writeToFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeToFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(612, Short.MAX_VALUE)
                .addComponent(writeToFileButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(writeToFileButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void writeToFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeToFileButtonActionPerformed
        String fileName = JOptionPane.showInputDialog(this, "Enter the file name", "");
        File file = new File(fileName + ".xoodbexp");
        FileOutputStream fileOutputStream = null;
        if(file.exists()) {
            int option = JOptionPane.showConfirmDialog(this, 
                    "The file already exists. Do you want to overwrite it?",
                    "Enter your choice",JOptionPane.YES_NO_CANCEL_OPTION);
            if(option == JOptionPane.YES_OPTION) {
                try {
                    fileOutputStream = new FileOutputStream(file);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ExceptionFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                return;
            }
        } else {
            try {
                    fileOutputStream = new FileOutputStream(file);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ExceptionFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        try {
            fileOutputStream.write(exceptionTextArea.getText().getBytes());
            fileOutputStream.flush();
            fileOutputStream.close();
        } catch (IOException ex) {
            Logger.getLogger(ExceptionFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }
    }//GEN-LAST:event_writeToFileButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExceptionFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea exceptionTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton writeToFileButton;
    // End of variables declaration//GEN-END:variables

    public void appendExceptionText(Exception exp) {
        exceptionTextArea.append(exp + "\n");
    }

    public void appendExceptionText(String text) {
        exceptionTextArea.append(text + "\n");
    }

    private void changeSystemOut(PrintStream printStream) {
        System.setOut(printStream);
    }
}
